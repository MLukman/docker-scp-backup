#!/bin/bash
trap "exit 1" SIGINT

CFGDIR="/etc/backups"

if [[ "$EUID" -ne 0 ]]
	then echo "ERROR: Please run as root or sudo"
	exit 1
fi

if [[ ! -d "$CFGDIR" ]]; then
	mkdir -p $CFGDIR
fi

echo "Existing Backup IDs:"
find $CFGDIR -maxdepth 1 -type f -exec basename {} \;
echo

while : ; do
	echo "Please specify Backup ID"
	read -p '--> ' BAK_ID
	if [[ ! -z `echo "$BAK_ID" | tr -d "[a-zA-Z0-9]"` ]]; then
		echo "INVALID: Backup ID must be a single alpha-numeric keyword"
	elif [[ ! -z "$BAK_ID" ]]; then 
		echo
		break
	fi
done

configure () {
	while : ; do
		echo "Source path"
		read -p '--> ' -e -i "$BAK_PATH" BAK_PATH
		if [[ ! -d "$BAK_PATH" ]]; then
			echo "INVALID: Source path must be an existing directory"
		else
			BAK_PATH=$(realpath $BAK_PATH)
			break
		fi
	done
	
	while : ; do
		BAK_ARC2=$BAK_ARC
		if [[ -z "$BAK_ARC2" ]]; then
			BAK_ARC2="$(basename $BAK_PATH)-%Y%m%d"
		fi
		echo "Archive filename pattern (using linux date command pattern) without the extension"
		read -p '--> ' -e -i "$BAK_ARC2" BAK_ARC
		if [[ ! -z "$BAK_ARC" ]]; then 
			break
		fi
	done
	
	while : ; do
		while : ; do
			echo "SCP host/IP address"
			read -p '--> ' -e -i "$BAK_SCP_HOST" BAK_SCP_HOST
			if [[ ! -z "$BAK_SCP_HOST" ]]; then 
				break
			fi
		done
		
		while : ; do
	  		if [[ -z "$BAK_SCP_PORT" ]]; then
				BAK_SCP_PORT=22
			fi
			echo "SCP port"
			read -p '--> ' -e -i "$BAK_SCP_PORT" BAK_SCP_PORT
			if [[ ! -z "$BAK_SCP_PORT" ]]; then 
				break
			fi
		done

		while : ; do
			echo "SCP user"
			read -p '--> ' -e -i "$BAK_SCP_USER" BAK_SCP_USER
			if [[ ! -z "$BAK_SCP_USER" ]]; then 
				break
			fi
		done
		
		echo "Private key (optional - if not provided any backup/restore operations will prompt for password)"
		read -p '--> ' -e -i "$BAK_SCP_PKEY" BAK_SCP_PKEY		
		
		while : ; do
			echo "Backup destination path within SCP server"
			read -p '--> ' -e -i "$BAK_SCP_PATH" BAK_SCP_PATH
			if [[ ! -z "$BAK_SCP_PATH" ]]; then 
				break
			fi
		done
		
		echo "Checking SCP connectivity ..."
		SCP_OPTIONS="-oStrictHostKeyChecking=no -p $BAK_SCP_PORT"
		if [[ ! -z "$BAK_SCP_PKEY" ]]; then
			SCP_OPTIONS="$SCP_OPTIONS -i $BAK_SCP_PKEY"
		fi
		if ssh $SCP_OPTIONS $BAK_SCP_USER@$BAK_SCP_HOST 1>/dev/null 2>/dev/null <<< ```
		  echo mkdir -p $BAK_SCP_PATH
		  echo exit
		  ```; then
			echo 'Connection was successful'
			break
		else
			echo 'ERROR: Error connecting or accessing destination path'
		fi
	done
	
	{
		echo BAK_PATH="'$BAK_PATH'"
		echo BAK_ARC="'$BAK_ARC'"
		echo BAK_SCP_HOST="'$BAK_SCP_HOST'"
		echo BAK_SCP_PORT="'$BAK_SCP_PORT'"
		echo BAK_SCP_USER="'$BAK_SCP_USER'"
		echo BAK_SCP_PKEY="'$BAK_SCP_PKEY'"
		echo BAK_SCP_PATH="'$BAK_SCP_PATH'"
	} > "$CFGDIR/$BAK_ID"
	echo ; echo "Backup ID $BAK_ID has been saved" ; echo
}
 
if [[ ! -f "$CFGDIR/$BAK_ID" ]]; then
	echo "Creating new backup .."
	echo
	configure
else
	source "$CFGDIR/$BAK_ID"
	configure
fi

